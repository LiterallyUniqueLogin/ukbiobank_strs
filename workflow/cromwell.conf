# See https://cromwell.readthedocs.io/en/stable/Configuring/
# only use double quotes!
include required(classpath("application"))

system {
  abort-jobs-on-terminate = true
  io {
    number-of-requests = 30
    per = 1 second
  }
}

## file based persistent database
database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:cromwell-executions/cromwell-db/cromwell-db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=10000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.lob_compressed=true;
    hsqldb.script_format=3
    """
    connectionTimeout = 120000
    numThreads = 1
   }
}

call-caching {
  enabled = true
}

backend {
  default = "Local"
  providers {  
    Local {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        concurrent-job-limit = 10
        run-in-background = true
        submit = "/usr/bin/env bash ${script}"
        root = "cromwell-executions"
        filesystems {
          local {
            localization: ["soft-link"]
            caching {
              duplication-strategy: ["soft-link"]
              hasing-strategy: ["path+modtime"]
            }
          }
        }
      }
    }
    SLURM {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        concurrent-job-limit = 500
        runtime-attributes = """
          Int threads = 1
          String memory = "2g"
          String dx_timeout
        """
        submit = """
          sbatch
            --account ddp268
            --partition ind-shared
            --nodes 1
            --job-name=${job_name}-%j
            # --output=logs/{job_name}/$j.out
	    -o ${out} -e ${err} 
            --mail-type FAIL --mail-user jonathan.margoliash@gmail.com
            --ntasks-per-node=${threads}
            --mem=${memory}
            --time=${dx_timeout}
            --parsable
            --chdir ${cwd}
        """
        kill = "scancel ${job_id}"
        check-alive = "squeue -j ${job_id}"
        job-id-regex = "Submitted batch job (\\d+).*"
      }
    }
}}
