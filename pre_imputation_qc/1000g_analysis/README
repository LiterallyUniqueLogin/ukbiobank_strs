I've confirmed the Hipstr  calls don't have any variants with duplicate IDs in them
The following command shows this by not printing anything
for chr in $(seq 1 22); do 
	zcat $DATASETS/1000Genomes/hipstr_calls_sample_subset/eur/chr${chr}/hipstr.*gz \
		| cut -f3 | sort | uniq -c | sort | awk '{ if ($1 != 1) print }'
done

Tests to determine whether 
people of ancestries different from the people we're imputing
genotypes into should be included in the reference panel or
not.

Timing of imputing one chromsome (chr3) for one ppt for
both eur and full reference panels
real    5m49.919s
user    14m22.966s
sys     0m16.045s

Total cost:
15/60 * 22 * 49 * $0.025 ~=~ $7

Running compare_variants.py gives
The hipstr calls overlap the reference panel at 445617 loci,
as determined solely by locus id (not pos).
This is mostly similar to the number 453,671 quoted by
Shubham here (https://www.nature.com/articles/s41467-018-06694-0)
as the number of STRs in the analysis

My analysis only captures 200190 overlapping loci (45%)
This means that 55% of loci with the same ID are at different
positions between the two datasets. Why? They're on the
same reference genome (b37)

Running compare_variants_by_id shows that all STR variant IDs which match between
hipstr and the snpstr reference panel overlap in reference sequence, which is as
expected

Side note:
To run a comparison with rtg vcfeval
First reformat hg19 into the rtg proprietary SDF format
rtg format -o rtg_tests/hg19 /projects/ps-gymreklab/resources/dbase/human/hg19/hg19.fa
Then rename the chromosomes of the existing baseline/call VCFs using the command
bcftools annotate --rename-chrs rename_chrs.txt -o output.vcf.gz -O z original.vcf.gz
Then run the comparison 
rtg vcfeval --sample HG00351 -b hipstr_renamed_chr/chr22.vcf.gz -c full_panel_imputed/chr22/HG00351_chr_renamed.vcf.gz -t rtg_tests/hg19/ -o rtg_tests/default

